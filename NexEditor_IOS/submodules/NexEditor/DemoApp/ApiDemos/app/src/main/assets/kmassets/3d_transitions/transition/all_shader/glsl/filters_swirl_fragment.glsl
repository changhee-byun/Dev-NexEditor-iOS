uniform sampler2D u_sTexture0;varying highp vec2 v_v2TexCoord0;uniform highp vec2 u_v2Resolution;uniform highp vec2 u_v2SrcResolution;void main(){	highp vec2 uUserInputPosition = vec2(0.5 , 0.5);	highp float uUserInputRadius = 0.5;	highp float uUserInputStrength = 0.5;	highp vec2 textureCoordinateToUse = v_v2TexCoord0;	highp float userX = uUserInputPosition.x * (u_v2SrcResolution.x / u_v2Resolution.x);	highp float userY = uUserInputPosition.y * (u_v2SrcResolution.y / u_v2Resolution.y);	highp vec2 userXY = vec2(userX,userY);	highp float dist = distance(userXY, v_v2TexCoord0);	highp float radius = uUserInputRadius * 1.0;	if (dist < radius)	{		textureCoordinateToUse -= userXY;		highp float percent = (radius - dist) / radius;		highp float theta = percent * percent * uUserInputStrength*16.0;		highp float s = sin(theta);		highp float c = cos(theta);		textureCoordinateToUse = vec2(dot(textureCoordinateToUse, vec2(c, -s)), dot(textureCoordinateToUse, vec2(s, c)));		textureCoordinateToUse += userXY;	}	gl_FragColor = texture2D(u_sTexture0, textureCoordinateToUse).rgba;}