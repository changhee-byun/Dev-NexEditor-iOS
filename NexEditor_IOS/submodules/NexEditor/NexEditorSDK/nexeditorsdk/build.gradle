import android.system.Os
import org.apache.tools.ant.taskdefs.condition.Os
apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    
    def BASE_VERSION = "2.7.2"
    def VERSION_CODE = 5326

    def BOOLEAN = "boolean"
    def TRUE = "true"
    def FALSE = "false"
    def STRING = "String"
    def INT = "int"
    def LONG = "long"
    def KM_MARKET_ID = "KM_MARKET_ID"
    def KM_EXP_YEAR = "KM_EXP_YEAR"
    def KM_EXP_MONTH = "KM_EXP_MONTH"
    def KM_EXP_DAY = "KM_EXP_DAY"
    def KM_LL_D = "KM_LL_D"
    def KM_LL_V = "KM_LL_V"
    def BUILD_DATE = "BUILD_DATE"
    def KM_FLURRY_API_KEY = ""
    def EVAL_EXPIRATION_MONTHS = 3
    def EDITION = "com.nexstreaming.kminternal.kinemaster.config.EditorGlobal.Edition"
    def KM_EDITION = "KM_EDITION"
    def EDITION_DEVICE_LOCK = ""
    def EDITION_TIME_LOCK = ""
    def EDITION_GOOGLE_PLAY = "com.nexstreaming.kminternal.kinemaster.config.EditorGlobal.Edition.PlayStore"
    def KM_API_LEVEL = "KM_API_LEVEL"
    def KM_PROJECT = "KM_PROJECT"
    def USE_VASSET = "USE_VASSET"
    def SO_FREFIX = "SO_FREFIX"
    def SUPPORT_COLLAGE = "SUPPORT_COLLAGE"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode VERSION_CODE
        versionName BASE_VERSION + "." + VERSION_CODE + ".DEV"
        consumerProguardFiles 'proguard-rules.pro'

    }
    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, TRUE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"Nex"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, USE_VASSET, TRUE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, TRUE)
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"Nex"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, TRUE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, TRUE)
        }

        lgeRelease.initWith(buildTypes.release)
        lgeRelease {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"LGE"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, TRUE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, TRUE)
        }

        xiaomiRelease.initWith(buildTypes.release)
        xiaomiRelease {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"Xiaomi"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, TRUE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, TRUE)
        }

        hisiliconRelease.initWith(buildTypes.release)
        hisiliconRelease {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "3" )
            buildConfigField( STRING, KM_PROJECT, '"Nex"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, FALSE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, FALSE)
        }

        gioneeRelease.initWith(buildTypes.release)
        gioneeRelease {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"Gionee"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, FALSE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, FALSE)
        }

        transsionRelease.initWith(buildTypes.release)
        transsionRelease {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"Transsion"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, FALSE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, FALSE)
        }

        vivoRelease.initWith(buildTypes.release)
        vivoRelease {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"Vivo"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, FALSE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, TRUE)
        }

        tinnoRelease.initWith(buildTypes.release)
        tinnoRelease {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"Tinno"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, TRUE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, TRUE)
        }

        zteRelease.initWith(buildTypes.release)
        zteRelease {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"Zte"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, TRUE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, TRUE)
        }

        oppoRelease.initWith(buildTypes.release)
        opppRelease {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"Oppo"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, TRUE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, TRUE)
        }

        oneplusRelease.initWith(buildTypes.release)
        oneplusRelease {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"OnePlus"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, FALSE )
            buildConfigField( STRING, SO_FREFIX, '""')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, FALSE)
        }
        
        SPRelease.initWith(buildTypes.release)
        SPRelease {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //shrinkResources true
            buildConfigField( BOOLEAN, KM_LL_D, TRUE )
            buildConfigField( BOOLEAN, KM_LL_V, FALSE )
            buildConfigField( STRING, KM_MARKET_ID, '"Google"')
            buildConfigField( INT, KM_EXP_MONTH, "0" )
            buildConfigField( INT, KM_EXP_DAY, "0" )
            buildConfigField( INT, KM_EXP_YEAR, "0" )
            buildConfigField( EDITION, KM_EDITION, EDITION_GOOGLE_PLAY )
            buildConfigField( INT, KM_API_LEVEL, "0" )
            buildConfigField( STRING, KM_PROJECT, '"Nex"')
            buildConfigField( LONG, BUILD_DATE, String.valueOf(System.currentTimeMillis()) + "L")
            buildConfigField( BOOLEAN, USE_VASSET, TRUE )
            buildConfigField( STRING, SO_FREFIX, '"_sp"')
            buildConfigField( BOOLEAN, SUPPORT_COLLAGE, FALSE)
        }

    }
    lintOptions {
        ignore("MissingTranslation")
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDirs = ['src/main/jniLibs']
            jni.srcDirs = [] // This prevents the auto generation of Android.mk
        }
    }

//    task cleanNative(type: Exec, description: 'Clean JNI object files') {
//        def ndkDir = plugins.getPlugin('com.android.library').sdkHandler.getNdkFolder()
//        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//            commandLine "$ndkDir\\ndk-build.cmd",
//                    '-C', file('src/main/jni/').absolutePath,
//                    'NDK_PROJECT_PATH=./',
//                    'APP_BUILD_SCRIPT=./Android_ndk.mk',
//                    'clean'
//        } else {
//            commandLine "$ndkDir\\ndk-build",
//                    '-C', file('src/main/jni/').absolutePath,
//                    'NDK_PROJECT_PATH=./',
//                    'APP_BUILD_SCRIPT=./Android_ndk.mk',
//                    'clean'
//        }
//    }
//    clean.dependsOn 'cleanNative'
//    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
//        def ndkDir = plugins.getPlugin('com.android.library').sdkHandler.getNdkFolder()
//        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//            commandLine "$ndkDir\\ndk-build.cmd",
//                    '-C', file('src/main/jni/').absolutePath,
//                    'NDK_PROJECT_PATH=./',
//                    'APP_BUILD_SCRIPT=./Android_ndk.mk',
//                    'APP_STL=stlport_static',
//                    'STLPORT_FORCE_REBUILD=true',
//                    'APP_ABI=armeabi-v7a',
//                    'USE_NDK=true'
//        } else {
//            commandLine "$ndkDir\\ndk-build.cmd",
//                    '-C', file('src/main/jni/').absolutePath,
//                    'NDK_PROJECT_PATH=./',
//                    'APP_BUILD_SCRIPT=./Android_ndk.mk',
//                    'APP_STL=stlport_static',
//                    'STLPORT_FORCE_REBUILD=true',
//                    'APP_ABI=armeabi-v7a',
//                    'USE_NDK=true'
//        }
//    }
//    task delelteNativeLibs(type: Delete) {
//        delete './src/main/jniLibs/armeabi-v7a/libnexkmsdk.so'
//    }
//    task copyNativeLibs(type: Copy) {
//        from './src/main/jni/libs/armeabi-v7a/libnexkmsdk.so'
//        into './src/main/jniLibs/armeabi-v7a'
//    }
//    copyNativeLibs.dependsOn delelteNativeLibs
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn buildNative
//    }
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn delelteNativeLibs
//    }
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn copyNativeLibs
//    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-annotations:24.0.0'
}
