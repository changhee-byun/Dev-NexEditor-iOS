apply plugin: 'com.android.library'

def getNdkBuildPath() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def command = properties.getProperty('ndk.dir')
    command += "\\ndk-build.cmd"

    return command
}

android {
    compileSdkVersion 21
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = []
    }

    ext {
        nativeDebuggable = 4
    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        if (nativeDebuggable == 1) {
            commandLine getNdkBuildPath(), 'NDK_DEBUG=1', '-C', file('src/main/jni').absolutePath
        } else if( nativeDebuggable == 2){
            commandLine getNdkBuildPath(), 'APP_ABI=armeabi armeabi-v7a', '-C', file('src/main/jni').absolutePath
        } else if( nativeDebuggable == 3){
            commandLine getNdkBuildPath(), 'APP_ABI=arm64-v8a','APP_CPPFLAGS += -std=c++11' , '-C', file('src/main/jni').absolutePath
        } else if( nativeDebuggable == 4){
            commandLine getNdkBuildPath(), 'APP_ABI=armeabi-v7a arm64-v8a', 'APP_CPPFLAGS += -std=c++11', '-C', file('src/main/jni').absolutePath
        }
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }

    task cleanNative(type: Exec, description: 'Clean native objs and lib') {
        commandLine getNdkBuildPath(), '-C', file('src/main').absolutePath, 'clean'
        delete "${projectDir}/src/main/obj"
    }

    clean.dependsOn 'cleanNative'


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}
